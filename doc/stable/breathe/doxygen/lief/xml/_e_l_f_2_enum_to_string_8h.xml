<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="_e_l_f_2_enum_to_string_8h" kind="file" language="C++">
    <compoundname>EnumToString.h</compoundname>
    <includes local="yes">LIEF/visibility.h</includes>
    <includes refid="_e_l_f_2enums_8h" local="yes">LIEF/ELF/enums.h</includes>
    <includedby refid="_e_l_f_8h" local="yes">/lief-src/api/c/include/LIEF/ELF.h</includedby>
    <incdepgraph>
      <node id="1">
        <label>/lief-src/api/c/include/LIEF/ELF/EnumToString.h</label>
        <link refid="_e_l_f_2_enum_to_string_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>LIEF/ELF/enums.h</label>
        <link refid="_e_l_f_2enums_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>LIEF/ELF/enums.inc</label>
      </node>
      <node id="4">
        <label>LIEF/ELF/undef.h</label>
      </node>
      <node id="2">
        <label>LIEF/visibility.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>/lief-src/api/c/include/LIEF/ELF.h</label>
        <link refid="_e_l_f_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>/lief-src/api/c/include/LIEF/ELF/EnumToString.h</label>
        <link refid="_e_l_f_2_enum_to_string_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>/lief-src/api/c/include/LIEF/LIEF.h</label>
        <link refid="_l_i_e_f_8h_source"/>
      </node>
    </invincdepgraph>
    <sectiondef kind="func">
      <memberdef kind="function" id="_e_l_f_2_enum_to_string_8h_1a2438e84a2c631d1b5d4ab0e290d07a16" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char * SYMBOL_BINDINGS_to_string</definition>
        <argsstring>(enum LIEF_ELF_SYMBOL_BINDINGS e)</argsstring>
        <name>SYMBOL_BINDINGS_to_string</name>
        <param>
          <type>enum LIEF_ELF_SYMBOL_BINDINGS</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/lief-src/api/c/include/LIEF/ELF/EnumToString.h" line="27" column="13" declfile="/lief-src/api/c/include/LIEF/ELF/EnumToString.h" declline="27" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="_e_l_f_2_enum_to_string_8h_1abe698e6078bb65b83a3796c72c17068a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char * E_TYPE_to_string</definition>
        <argsstring>(enum LIEF_ELF_E_TYPE e)</argsstring>
        <name>E_TYPE_to_string</name>
        <param>
          <type>enum LIEF_ELF_E_TYPE</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/lief-src/api/c/include/LIEF/ELF/EnumToString.h" line="28" column="13" declfile="/lief-src/api/c/include/LIEF/ELF/EnumToString.h" declline="28" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="_e_l_f_2_enum_to_string_8h_1a0de02d8d15b854251a26d9f8e176bbd4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char * VERSION_to_string</definition>
        <argsstring>(enum LIEF_ELF_VERSION e)</argsstring>
        <name>VERSION_to_string</name>
        <param>
          <type>enum LIEF_ELF_VERSION</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/lief-src/api/c/include/LIEF/ELF/EnumToString.h" line="29" column="13" declfile="/lief-src/api/c/include/LIEF/ELF/EnumToString.h" declline="29" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="_e_l_f_2_enum_to_string_8h_1ac4a3eacf62d77a7caffe98b27a412888" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char * ARCH_to_string</definition>
        <argsstring>(enum LIEF_ELF_ARCH e)</argsstring>
        <name>ARCH_to_string</name>
        <param>
          <type>enum LIEF_ELF_ARCH</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/lief-src/api/c/include/LIEF/ELF/EnumToString.h" line="30" column="13" declfile="/lief-src/api/c/include/LIEF/ELF/EnumToString.h" declline="30" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="_e_l_f_2_enum_to_string_8h_1ab0629f6d892ef96390f5568a43be9366" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char * SEGMENT_TYPES_to_string</definition>
        <argsstring>(enum LIEF_ELF_SEGMENT_TYPES e)</argsstring>
        <name>SEGMENT_TYPES_to_string</name>
        <param>
          <type>enum LIEF_ELF_SEGMENT_TYPES</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/lief-src/api/c/include/LIEF/ELF/EnumToString.h" line="31" column="13" declfile="/lief-src/api/c/include/LIEF/ELF/EnumToString.h" declline="31" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="_e_l_f_2_enum_to_string_8h_1adad57ac61aca0255a013a940f34a71e6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char * DYNAMIC_TAGS_to_string</definition>
        <argsstring>(enum LIEF_ELF_DYNAMIC_TAGS e)</argsstring>
        <name>DYNAMIC_TAGS_to_string</name>
        <param>
          <type>enum LIEF_ELF_DYNAMIC_TAGS</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/lief-src/api/c/include/LIEF/ELF/EnumToString.h" line="32" column="13" declfile="/lief-src/api/c/include/LIEF/ELF/EnumToString.h" declline="32" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="_e_l_f_2_enum_to_string_8h_1a35442d5dcc7d27f2c11622043173ec8f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char * ELF_SECTION_TYPES_to_string</definition>
        <argsstring>(enum LIEF_ELF_ELF_SECTION_TYPES e)</argsstring>
        <name>ELF_SECTION_TYPES_to_string</name>
        <param>
          <type>enum LIEF_ELF_ELF_SECTION_TYPES</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/lief-src/api/c/include/LIEF/ELF/EnumToString.h" line="33" column="13" declfile="/lief-src/api/c/include/LIEF/ELF/EnumToString.h" declline="33" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="_e_l_f_2_enum_to_string_8h_1a4aec4ff4f519ef9e65be4a41de79001f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char * ELF_SECTION_FLAGS_to_string</definition>
        <argsstring>(enum LIEF_ELF_ELF_SECTION_FLAGS e)</argsstring>
        <name>ELF_SECTION_FLAGS_to_string</name>
        <param>
          <type>enum LIEF_ELF_ELF_SECTION_FLAGS</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/lief-src/api/c/include/LIEF/ELF/EnumToString.h" line="34" column="13" declfile="/lief-src/api/c/include/LIEF/ELF/EnumToString.h" declline="34" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="_e_l_f_2_enum_to_string_8h_1a0a48ebe3b6831293784aae028d9708d2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char * ELF_SYMBOL_TYPES_to_string</definition>
        <argsstring>(enum LIEF_ELF_ELF_SYMBOL_TYPES e)</argsstring>
        <name>ELF_SYMBOL_TYPES_to_string</name>
        <param>
          <type>enum LIEF_ELF_ELF_SYMBOL_TYPES</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/lief-src/api/c/include/LIEF/ELF/EnumToString.h" line="35" column="13" declfile="/lief-src/api/c/include/LIEF/ELF/EnumToString.h" declline="35" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="_e_l_f_2_enum_to_string_8h_1a4bf16cefd4675ce0de78847733b8f722" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char * ELF_CLASS_to_string</definition>
        <argsstring>(enum LIEF_ELF_ELF_CLASS e)</argsstring>
        <name>ELF_CLASS_to_string</name>
        <param>
          <type>enum LIEF_ELF_ELF_CLASS</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/lief-src/api/c/include/LIEF/ELF/EnumToString.h" line="36" column="13" declfile="/lief-src/api/c/include/LIEF/ELF/EnumToString.h" declline="36" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="_e_l_f_2_enum_to_string_8h_1a5900c116ffe55d3a8284b76b6d2eb00c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char * ELF_DATA_to_string</definition>
        <argsstring>(enum LIEF_ELF_ELF_DATA e)</argsstring>
        <name>ELF_DATA_to_string</name>
        <param>
          <type>enum LIEF_ELF_ELF_DATA</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/lief-src/api/c/include/LIEF/ELF/EnumToString.h" line="37" column="13" declfile="/lief-src/api/c/include/LIEF/ELF/EnumToString.h" declline="37" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="_e_l_f_2_enum_to_string_8h_1adf04ffcfb06393ac74825f0cce02dc4f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char * OS_ABI_to_string</definition>
        <argsstring>(enum LIEF_ELF_OS_ABI e)</argsstring>
        <name>OS_ABI_to_string</name>
        <param>
          <type>enum LIEF_ELF_OS_ABI</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/lief-src/api/c/include/LIEF/ELF/EnumToString.h" line="38" column="13" declfile="/lief-src/api/c/include/LIEF/ELF/EnumToString.h" declline="38" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="_e_l_f_2_enum_to_string_8h_1ae1b97eac62207a4be3dd6d3e62ee1553" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char * DYNAMIC_FLAGS_to_string</definition>
        <argsstring>(enum LIEF_ELF_DYNAMIC_FLAGS e)</argsstring>
        <name>DYNAMIC_FLAGS_to_string</name>
        <param>
          <type>enum LIEF_ELF_DYNAMIC_FLAGS</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/lief-src/api/c/include/LIEF/ELF/EnumToString.h" line="39" column="13" declfile="/lief-src/api/c/include/LIEF/ELF/EnumToString.h" declline="39" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="_e_l_f_2_enum_to_string_8h_1a1d54e5ac7597db43dc0af64019d1ad20" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char * DYNAMIC_FLAGS_1_to_string</definition>
        <argsstring>(enum LIEF_ELF_DYNAMIC_FLAGS_1 e)</argsstring>
        <name>DYNAMIC_FLAGS_1_to_string</name>
        <param>
          <type>enum LIEF_ELF_DYNAMIC_FLAGS_1</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/lief-src/api/c/include/LIEF/ELF/EnumToString.h" line="40" column="13" declfile="/lief-src/api/c/include/LIEF/ELF/EnumToString.h" declline="40" declcolumn="13"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>Copyright<sp/>2017<sp/>-<sp/>2023<sp/>R.<sp/>Thomas</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>2017<sp/>-<sp/>2023<sp/>Quarkslab</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>C_LIEF_ELF_ENUM_TO_STRING_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>C_LIEF_ELF_ENUM_TO_STRING_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;LIEF/visibility.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;LIEF/ELF/enums.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal">LIEF_API<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>SYMBOL_BINDINGS_to_string(</highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>LIEF_ELF_SYMBOL_BINDINGS<sp/>e);</highlight></codeline>
<codeline lineno="28"><highlight class="normal">LIEF_API<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>E_TYPE_to_string(</highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>LIEF_ELF_E_TYPE<sp/>e);</highlight></codeline>
<codeline lineno="29"><highlight class="normal">LIEF_API<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>VERSION_to_string(</highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>LIEF_ELF_VERSION<sp/>e);</highlight></codeline>
<codeline lineno="30"><highlight class="normal">LIEF_API<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>ARCH_to_string(</highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>LIEF_ELF_ARCH<sp/>e);</highlight></codeline>
<codeline lineno="31"><highlight class="normal">LIEF_API<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>SEGMENT_TYPES_to_string(</highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>LIEF_ELF_SEGMENT_TYPES<sp/>e);</highlight></codeline>
<codeline lineno="32"><highlight class="normal">LIEF_API<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>DYNAMIC_TAGS_to_string(</highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>LIEF_ELF_DYNAMIC_TAGS<sp/>e);</highlight></codeline>
<codeline lineno="33"><highlight class="normal">LIEF_API<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>ELF_SECTION_TYPES_to_string(</highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>LIEF_ELF_ELF_SECTION_TYPES<sp/>e);</highlight></codeline>
<codeline lineno="34"><highlight class="normal">LIEF_API<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>ELF_SECTION_FLAGS_to_string(</highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>LIEF_ELF_ELF_SECTION_FLAGS<sp/>e);</highlight></codeline>
<codeline lineno="35"><highlight class="normal">LIEF_API<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>ELF_SYMBOL_TYPES_to_string(</highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>LIEF_ELF_ELF_SYMBOL_TYPES<sp/>e);</highlight></codeline>
<codeline lineno="36"><highlight class="normal">LIEF_API<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>ELF_CLASS_to_string(</highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>LIEF_ELF_ELF_CLASS<sp/>e);</highlight></codeline>
<codeline lineno="37"><highlight class="normal">LIEF_API<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>ELF_DATA_to_string(</highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>LIEF_ELF_ELF_DATA<sp/>e);</highlight></codeline>
<codeline lineno="38"><highlight class="normal">LIEF_API<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>OS_ABI_to_string(</highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>LIEF_ELF_OS_ABI<sp/>e);</highlight></codeline>
<codeline lineno="39"><highlight class="normal">LIEF_API<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>DYNAMIC_FLAGS_to_string(</highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>LIEF_ELF_DYNAMIC_FLAGS<sp/>e);</highlight></codeline>
<codeline lineno="40"><highlight class="normal">LIEF_API<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>DYNAMIC_FLAGS_1_to_string(</highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>LIEF_ELF_DYNAMIC_FLAGS_1<sp/>e);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal">}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/lief-src/api/c/include/LIEF/ELF/EnumToString.h"/>
  </compounddef>
</doxygen>
